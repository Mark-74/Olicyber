board = [ 0x35, 0x30, 0x30, 0x30, 0x30, 0x33, 0x30, 0x38, 0x30, 0x30, 0x30, 0x33, 0x30, 0x34, 0x30, 0x30, 0x30, 0x30, 0x37, 0x38, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, 0x30, 0x30, 0x30, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x31, 0x39, 0x36, 0x30, 0x30, 0x30, 0x37, 0x30, 0x30, 0x30, 0x30, 0x33, 0x32, 0x30, 0x30, 0x30, 0x34, 0x30, 0x30, 0x35, 0x30, 0x30, 0x30, 0x30, 0x32, 0x30, 0x30, 0x39, 0x30, 0x30, 0x30, 0x30, 0x39, 0x30, 0x31, 0x32, 0x30, 0x30, 0x30, 0x36]
idxs = [ 0x01, 0x02, 0x03, 0x04, 0x06, 0x08, 0x09, 0x0a, 0x0c, 0x0e, 0x0f, 0x10, 0x11, 0x14, 0x15, 0x16, 0x17, 0x18, 0x1a, 0x1b, 0x1c, 0x1f, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x2c, 0x2d, 0x2e, 0x30, 0x31, 0x32, 0x33, 0x36, 0x37, 0x38, 0x3a, 0x3b, 0x3d, 0x3e, 0x3f, 0x40, 0x42, 0x43, 0x45, 0x46, 0x47, 0x48, 0x4a, 0x4d, 0x4e, 0x4f ]
solved_sudoku = [5, 4, 9, 7, 6, 3, 2, 8, 1, 2, 1, 3, 9, 4, 8, 6, 5, 7, 7, 8, 6, 5, 1, 2, 3, 9, 4, 6, 3, 1, 2, 9, 5, 4, 7, 8, 8, 2, 4, 3, 7, 1, 9, 6, 5, 9, 5, 7, 6, 8, 4, 1, 3, 2, 1, 7, 8, 4, 3, 6, 5, 2, 9, 4, 6, 2, 8, 5, 9, 7, 1, 3, 3, 9, 5, 1, 2, 7, 8, 4, 6]

def my_ord(a1: int) -> int:
    if a1 <= 48 or a1 > 57:
        return 9
    else:
        return a1-48

def board_ctor():
    for i in range(len(board)):
        board[i] = my_ord(board[i])

test = [False] * 81
flag = []
#len(flag) = 57

def main():
    board_ctor()
    # in ogni linea non deve apparire 2 volte lo stesso numero
    # in ogni colonna non deve apparire 2 volte lo stesso numero
    # in ogni quadrato 3*3 non deve apparire 2 volte lo stesso numero
    # conclusione: Ã¨ un sudoku 9 * 9
    
    for i in idxs:
        test[i] = True
    
    print('Sudoku:')
    for i in range(9):
        for j in range(9):
            if test[i*9+j] == False:
                print(board[i*9+j], end=' ')
            else:
                print('X', end=' ')
        print()
    
    for i in range(len(test)):
        if test[i] == True:
            flag.append(str(solved_sudoku[i]))
    
    
    print('\n\nflag{' + ''.join(flag) + '}')
        
    
if __name__ == "__main__":
    main()
